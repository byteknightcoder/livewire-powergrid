<?php

namespace App\Http\Livewire;

use {{ modelName }};
use Carbon\Carbon;
use Illuminate\Database\QueryException;
use PowerComponents\LivewirePowerGrid\Button;
use PowerComponents\LivewirePowerGrid\Column;
use PowerComponents\LivewirePowerGrid\PowerGrid;
use PowerComponents\LivewirePowerGrid\PowerGridComponent;
use PowerComponents\LivewirePowerGrid\Traits\ActionButton;

class {{ componentName }} extends PowerGridComponent
{
    use ActionButton;

    public function setUp()
    {
        $this->showCheckBox()->showPerPage()->showSearchInput();
    }

    public function dataSource(): array
    {
        $model = {{ modelLastName }}::query()->get();
        return PowerGrid::eloquent($model)
            ->addColumn('id')
            ->addColumn('name')
            ->addColumn('created_at')
            ->addColumn('created_at_format', function({{ modelLastName }} $model) {
                return Carbon::parse($model->created_at)->format('d/m/Y H:i:s');
            })
            ->make();
    }

    public function columns(): array
    {

        return [
            Column::add()
                ->title(__('ID'))
                ->field('id')
                ->searchable()
                ->sortable(),

            Column::add()
                ->title(__('Descrição'))
                ->field('name')
                ->searchable()
                ->sortable(),

            Column::add()
                ->title(__('Criado em'))
                ->field('created_at')
                ->hidden(),

            Column::add()
                ->title(__('Criado em'))
                ->field('created_at_format')
                ->makeInputDatePicker('created_at')
                ->searchable()
        ];
    }

    public function actions(): array
    {
        return [
            Button::add('edit')
                ->caption(__('Editar'))
                ->class('bg-indigo-500 text-white')
                ->route('{{ modelKebabCase }}.edit', ['{{ modelKebabCase }}' => 'id']),

            Button::add('delete')
                ->caption(__('Excluir'))
                ->class('bg-red-500 text-white')
                ->route('{{ modelKebabCase }}.delete', ['{{ modelKebabCase }}' => 'id'])
                ->method('delete')
        ];
    }

    /*
    public function update(array $data ): bool
    {
       try {
           $updated = {{ modelLastName }}::query()->find($data['id'])->update([
                $data['field'] => $data['value']
           ]);
       } catch (QueryException $exception) {
           $updated = false;
       }
       return $updated;
    } */

}
